;------------------------------------------------------------------------
;TARGETとPLAYERによる커맨드の擬似実行. 
;ARGにSELECTCOM, ARG:1に行う予定回数を代入しておく. 
;TCVAR:300～599を記録用に用いる。현재は539まで使用中
;複数プレイはとりあえずPLAYER１人＆TARGET３人まで
;------------------------------------------------------------------------
@SIMULATE_TRAIN, ARG, ARG:1
#DIM MEMO_TARGET, 3

TRYCALLFORM COM_ABLE{ARG}
SIF RESULT == 0
	RETURN 0

;参加しないTARGET:0～を初期化する操作があるので、念のため記憶しておく
MEMO_TARGET = TARGET
MEMO_TARGET:1 = TARGET:1
MEMO_TARGET:2 = TARGET:2

;お互いのPALAM, EXP, EX, JUEL, BASEを記録(後で増加分を算出する)
CALL SIMULATE_TRAIN_FIRST
;커맨드の擬似実行
CALL SIMULATE_TRAIN_COM, ARG, ARG:1
;経験や구슬などの獲得量計算
CALL SIMULATE_TRAIN_CALC
;結果発表
CALL SIMULATE_TRAIN_SHOW

TARGET = MEMO_TARGET
TARGET:1 = MEMO_TARGET:1
TARGET:2 = MEMO_TARGET:2

;ARGには플레이ヤー以外の人の人数. 例えば３Ｐする場合にはARGを２にする. １は省略가능
@SIMULATE_TRAIN_FIRST, ARG
#DIM LCOUNT
SIF ARG <= 1
	ARG = 1

PREVCOM = -1

VARSET TARGET, 0, ARG, 9

CALL SIMULATE_TRAIN_FIRST_SET, PLAYER
FOR LCOUNT, 0, 9
	SIF TARGET:LCOUNT > 0
		CALL SIMULATE_TRAIN_FIRST_SET, TARGET:LCOUNT
NEXT


@SIMULATE_TRAIN_FIRST_SET, ARG
#DIM LCOUNT

;TCVAR:300～399はEXP
FOR LCOUNT, 0, 100
	TCVAR:ARG:(LCOUNT + 300) = EXP:ARG:LCOUNT
NEXT
;TCVAR:400～429はJUEL
FOR LCOUNT, 0, 30
	TCVAR:ARG:(LCOUNT + 400) = JUEL:ARG:LCOUNT
NEXT
;TCVAR:430～459はPALAM
FOR LCOUNT, 0, 30
	TCVAR:ARG:(LCOUNT + 430) = PALAM:ARG:LCOUNT
NEXT
;TCVAR:460～519はEX
FOR LCOUNT, 0, 60
	TCVAR:ARG:(LCOUNT + 460) = EX:ARG:LCOUNT
NEXT
;TCVAR:520～539はBASE
FOR LCOUNT, 0, 20
	TCVAR:ARG:(LCOUNT + 520) = BASE:ARG:LCOUNT
NEXT

;Ｖ윤, Ａ윤, 순종, 욕정のPALAMは少なすぎると支障が出るので底上げ
PALAM:ARG:Ｖ윤 += 3000
PALAM:ARG:Ａ윤 += 3000
PALAM:ARG:순종 += 3000
PALAM:ARG:욕정 += 3000

;절정사정게이지初期化
CVARSET BASE, 2, 0

@SIMULATE_TRAIN_CALC
#DIM LCOUNT

CALL SIMULATE_TRAIN_CALC_SET, PLAYER
FOR LCOUNT, 0, 9
	SIF TARGET:LCOUNT > 0
		CALL SIMULATE_TRAIN_CALC_SET, TARGET:LCOUNT
NEXT

@SIMULATE_TRAIN_CALC_SET, ARG
#DIM LCOUNT
;Ｖ윤, Ａ윤, 순종, 욕정の底上げ終了
PALAM:ARG:Ｖ윤 -= 3000
PALAM:ARG:Ａ윤 -= 3000
PALAM:ARG:순종 -= 3000
PALAM:ARG:욕정 -= 3000

;PLAYERがMASTERでないときには一部の経験の増加量を減らす
IF ARG == TARGET && PLAYER != MASTER
	FOR LCOUNT, 0, 100
		SELECTCASE EXPNAME:LCOUNT
		;増加分を８割減
		CASE "봉사쾌락경험", "가학쾌락경험"
			EXP:ARG:LCOUNT = TCVAR:ARG:(LCOUNT + 300) + (EXP:ARG:LCOUNT - TCVAR:ARG:(LCOUNT + 300) )/5
		ENDSELECT
	NEXT
ENDIF

;EXP関連の数値は出きった後なので表示の簡略化のため値を増分に書き換える
FOR LCOUNT, 0, 100
	TCVAR:ARG:(LCOUNT + 300) = EXP:ARG:LCOUNT - TCVAR:ARG:(LCOUNT + 300)
NEXT

;이하でJUELの増加分を計算する（まずはPALAM、EX、JUELの増分を出す）
FOR LCOUNT, 0, 30
	PALAM:ARG:LCOUNT = MAX(PALAM:ARG:LCOUNT - TCVAR:ARG:(LCOUNT + 430), 0)
NEXT
FOR LCOUNT, 0, 60
	EX:ARG:LCOUNT = EX:ARG:LCOUNT - TCVAR:ARG:(LCOUNT + 460)
NEXT
FOR LCOUNT, 20, 25
	JUEL:ARG:LCOUNT = JUEL:ARG:LCOUNT - TCVAR:ARG:(LCOUNT + 400)
NEXT
;JUEL増加量の算出(通常の半分程度)
FOR LCOUNT, 0, 16
	SIF ARG == MASTER
		BREAK

	SELECTCASE LCOUNT
	CASE 3, 11, 12, 13
		CONTINUE
	CASEELSE
		GOTJUEL:LCOUNT = MULTIPLY(GET_JUEL(LCOUNT, ARG), 50)

		;상대がMASTERでないなら獲得量を減らす
		SELECTCASE PLAYER
		CASE MASTER
		CASE ASSI
			GOTJUEL:LCOUNT /= 2
		CASEELSE
			GOTJUEL:LCOUNT /= 4
		ENDSELECT

		SIF GOTJUEL:LCOUNT < 50
			GOTJUEL:LCOUNT = 0
		JUEL:ARG:LCOUNT += GOTJUEL:LCOUNT

		;数値が出きった後なので表示の簡略化のため値を増分に書き換える
		TCVAR:ARG:(LCOUNT + 400) = GOTJUEL:LCOUNT
	ENDSELECT
NEXT
;増加したPALAM, EXはJUELに変えたので, 元の値に戻す
FOR LCOUNT, 0, 30
	PALAM:ARG:LCOUNT = TCVAR:ARG:(LCOUNT + 430)
NEXT
FOR LCOUNT, 0, 60
	EX:ARG:LCOUNT = TCVAR:ARG:(LCOUNT + 460)
NEXT
FOR LCOUNT, 20, 25
	JUEL:ARG:LCOUNT = TCVAR:ARG:(LCOUNT + 400)
NEXT
;몽마は정액경험でリフレッシュ
IF TALENT:ARG:몽마 + TALENT:ARG:상위몽마
	CALL CALC, "체력회복", TCVAR:ARG:320*30, ARG
	CALL CALC, "기력회복", TCVAR:ARG:320*30, ARG
	CALL CALC, "정력회복", TCVAR:ARG:320*2, ARG
ENDIF

;------------------------------------------------------------------------
;ARGにはTARGET側の表示経験, ARG:1にはPLAYER側の表示経験の番号を入れる
;ただし、하룻밤개방など、PLAYER < 0 もあるので注意
;経験名で指定したいところだが、TCVARが番号で記録しているので速度重視で番号で指定する
;------------------------------------------------------------------------
@PRINT_SIMULATE_TRAIN, ARG, ARG:1
#DIM LCOUNT
;PLAYERとTARGETを同時に処理する
#DIM ACTOR, 4
#DIM EXP_ADD, 4

ACTOR = TARGET
ACTOR:1 = TARGET:1
ACTOR:2 = TARGET:2
ACTOR:3 = PLAYER

;それぞれ参照するものが長すぎるので代入
VARSET EXP_ADD

FOR LCOUNT, 0, 3
	SIF ACTOR:LCOUNT > 0
		EXP_ADD:LCOUNT = TCVAR:(ACTOR:LCOUNT):(ARG + 300)
NEXT
SIF PLAYER > 0
	EXP_ADD:3 = TCVAR:PLAYER:(ARG:1 + 300)

SIF EXP_ADD + EXP_ADD:1 + EXP_ADD:2 + EXP_ADD:3 == 0
	RETURN 0

SIF TARGET:1 == 0
	PRINTFORM %BL(2)%

FOR LCOUNT, 0, 4
	SIF ACTOR:LCOUNT <= 0
		CONTINUE

	IF EXP_ADD:LCOUNT > 0
		;PLAYERの時には経験の表示が異なる
		IF LCOUNT == 3
			LOCALS = %TEXT_RJ(EXPNAME:(ARG:1), 14)%＋{EXP_ADD:LCOUNT, 4}
		ELSE
			LOCALS = %TEXT_RJ(EXPNAME:ARG, 14)%＋{EXP_ADD:LCOUNT, 4}
		ENDIF
		PRINTFORM %TEXT_LJ(LOCALS, 22)%
	ELSE
		PRINTFORM %BL(22)%
	ENDIF
NEXT

PRINTL 


;PLAYERがいない場合（하룻밤개방とか）も考慮する
@SIMULATE_TRAIN_SHOW
#DIM LCOUNT
#DIM LCOUNT2
;PLAYERとTARGETを同時に処理する
#DIM ACTOR, 4
#DIM JUEL_ADD, 4
;경험치を得ているかを記録
#DIM IS_EXP_ADD, 4

PRINTL 

;PLAYERの정력と스톡の減少量を表示
IF PLAYER > 0 && (BASE:PLAYER:정력 != TCVAR:PLAYER:526 || BASE:PLAYER:스톡 != TCVAR:PLAYER:527)
	PRINTFORM %CALLNAME:PLAYER%의정력:({TCVAR:PLAYER:526}/{MAXBASE:PLAYER:정력})
	SIF MAXBASE:PLAYER:스톡 > 0
		PRINTFORM ×({TCVAR:PLAYER:527}/{MAXBASE:PLAYER:스톡})
	PRINTFORM  → ({BASE:PLAYER:정력}/{MAXBASE:PLAYER:정력})
	SIF MAXBASE:PLAYER:스톡 > 0
		PRINTFORM ×({BASE:PLAYER:스톡}/{MAXBASE:PLAYER:스톡})
	PRINTL 
ENDIF

ACTOR = TARGET
ACTOR:1 = TARGET:1
ACTOR:2 = TARGET:2
ACTOR:3 = PLAYER

;経験に変動があったキャラを表示するので체크
VARSET IS_EXP_ADD

FOR LCOUNT2, 0, 4
	SIF ACTOR:LCOUNT2 <= 0
		CONTINUE

	FOR LCOUNT, 0, 100
		SIF TCVAR:(ACTOR:LCOUNT2):(LCOUNT + 300) == 0
			CONTINUE

		IS_EXP_ADD:LCOUNT2 = 1
		BREAK
	NEXT
NEXT

;誰も経験変動ないなら終わり
SIF IS_EXP_ADD:0 + IS_EXP_ADD:1 + IS_EXP_ADD:2 + IS_EXP_ADD:3 == 0
	RETURN 0

;名前出力
SIF ACTOR:1 == 0
	PRINTFORM %BL(2)%

FOR LCOUNT, 0, 4
	SIF ACTOR:LCOUNT <= 0
		CONTINUE

	IF IS_EXP_ADD:LCOUNT
		LOCALS = [%CALLNAME:(ACTOR:LCOUNT)%]
		PRINTFORM %TEXT_LJ(TEXT_RJ(LOCALS, 14), 22)%
	ELSE
		PRINTFORM %BL(22)%
	ENDIF
NEXT
PRINTL 

;절정경험
CALL PRINT_SIMULATE_TRAIN, 2, 2
;동정탈취경험
CALL PRINT_SIMULATE_TRAIN, 14, 14
;정액경험＆사정경험
CALL PRINT_SIMULATE_TRAIN, 20, 3
CALL PRINT_SIMULATE_TRAIN, 3, 20
CALL PRINT_SIMULATE_TRAIN, 17, 17
CALL PRINT_SIMULATE_TRAIN, 18, 18
CALL PRINT_SIMULATE_TRAIN, 19, 19
;분유경험
CALL PRINT_SIMULATE_TRAIN, 54, 54
;ＶＡ경험＆ＶＡ확장경험
CALL PRINT_SIMULATE_TRAIN, 0, 0
CALL PRINT_SIMULATE_TRAIN, 53, 53
CALL PRINT_SIMULATE_TRAIN, 66, -1
CALL PRINT_SIMULATE_TRAIN, 1, 1
CALL PRINT_SIMULATE_TRAIN, 57, 57
CALL PRINT_SIMULATE_TRAIN, 67, -1
;키스경험
CALL PRINT_SIMULATE_TRAIN, 70, 70
;성교경험＆삽입경험
CALL PRINT_SIMULATE_TRAIN, 12, 15
CALL PRINT_SIMULATE_TRAIN, 15, 12
CALL PRINT_SIMULATE_TRAIN, 13, 16
CALL PRINT_SIMULATE_TRAIN, 16, 13
;자위경험
CALL PRINT_SIMULATE_TRAIN, 10, 10
;レズ, ＢＬ경험
CALL PRINT_SIMULATE_TRAIN, 40, 40
CALL PRINT_SIMULATE_TRAIN, 41, 41
;고통쾌락경험＆가학쾌락경험
CALL PRINT_SIMULATE_TRAIN, 30, 32
CALL PRINT_SIMULATE_TRAIN, 32, 30
;봉사쾌락～커닐링구스경험
FOR LCOUNT, 21, 29
	CALL PRINT_SIMULATE_TRAIN, LCOUNT, LCOUNT
NEXT
;목성교경험
CALL PRINT_SIMULATE_TRAIN, 76, 76

;상대が일반인なら구슬取得表示は無し
IF PLAYER < 0 || TALENT:PLAYER:일반인
	PRINTL 
	RETURN 0
ENDIF

;各種구슬ＧＥＴ
FOR LCOUNT2, 0, 16
	SELECTCASE LCOUNT2
	CASE 3, 11, 12, 13
		CONTINUE
	ENDSELECT

	VARSET JUEL_ADD
	FOR LCOUNT, 0, 4
		SIF ACTOR:LCOUNT > 0
			JUEL_ADD:LCOUNT = TCVAR:(ACTOR:LCOUNT):(LCOUNT2 + 400)
	NEXT

	SIF JUEL_ADD + JUEL_ADD:1 + JUEL_ADD:2 + JUEL_ADD:3 == 0
		CONTINUE

	SIF ACTOR:1 == 0
		PRINTFORM %BL(2)%

	FOR LCOUNT, 0, 4
		SIF ACTOR:LCOUNT <= 0
			CONTINUE

		IF JUEL_ADD:LCOUNT
			LOCALS = %PALAMNAME:LCOUNT2, 7%의 구슬＋{JUEL_ADD:LCOUNT, 4}
			PRINTFORM %TEXT_LJ(LOCALS, 22)%
		ELSE
			PRINTFORM %BL(22)%
		ENDIF
	NEXT
	PRINTL 
NEXT

PRINTL 

;-------------------------------------------------
;커맨드ARGを(ARG:1)回擬似的に計算する
;-------------------------------------------------
@SIMULATE_TRAIN_COM, ARG, ARG:1
#DIM LCOUNT
#DIM MEMO_FLAG8
#DIM MEMO_TFLAG33
#DIM MEMO_SELECTCOM
#DIM MEMO_BASE0
#DIM MEMO_BASE1
#DIM MEMO_BASE6
#DIM MEMO_BASE7

SIF ARG:1 == 0
	RETURN 0
IF COND("조교中")
	TRYCALLFORM COM_ABLE{ARG}
	SIF RESULT == 0
		RETURN 0
ENDIF

;텍스트出力플래그(FLAG:8)と, 무드を弄る. 
MEMO_FLAG8 = FLAG:8
MEMO_TFLAG33 = TFLAG:33
MEMO_SELECTCOM = SELECTCOM

FLAG:8 = 0
TFLAG:33 = MAX(TFLAG:33, 100)
SELECTCOM = ARG

;인서트플래그は解除
CVARSET TEQUIP, 20, 0
CVARSET TEQUIP, 21, 0
CVARSET TEQUIP, 22, 0

CALL RESET_TFLAGS

MEMO_BASE0 = BASE:체력
MEMO_BASE1 = BASE:기력

CALL SOURCE_CHECK_SIMPLE, SELECTCOM, 0, 100, ARG:1

;선택커맨드と실행치보정（やる気）の確認
;PRINTFORML TCVAR:28 = {TCVAR:28}, %TRAINNAME:SELECTCOM%

MEMO_BASE6 = BASE:PLAYER:정력
MEMO_BASE7 = BASE:PLAYER:스톡

;PRINTFORML BASE:PLAYER:정력 = {BASE:PLAYER:정력}, BASE:PLAYER:절정 = {BASE:PLAYER:절정}, COND("절정", PLAYER) = {COND("절정", PLAYER)}
IF COND("절정", PLAYER)
	;PRINTFORMW COND("절정", PLAYER) = {COND("절정", PLAYER)}
	TCVAR:PLAYER:5 = CALCF("절정の原因", TARGET, SELECTCOM)
	CALL CALC, "절정させた処理", TARGET
	CALL CALC, "절정した処理", PLAYER
	;정력減少控えめ
	BASE:PLAYER:정력 = MAX(MEMO_BASE6 - COND("절정", PLAYER)*2, 0)
	BASE:PLAYER:스톡 = MEMO_BASE7
ENDIF
;PRINTFORML EJAC = {EJAC:PLAYER}, LV = {ABL:PLAYER:ＬＶ}, 기교 = {ABL:PLAYER:기교}, TCVAR:1 = {TCVAR:PLAYER:1}

;체력기력の減少は少なめにする
BASE:체력 = MAX(MEMO_BASE0 - 20*ARG:1, 1)
BASE:기력 = MAX(MEMO_BASE1 - 10*ARG:1, 0)
;체력기력회복
IF TALENT:몽마 || TALENT:상위몽마 || TALENT:흡정체질
	CALL CALC, "체력회복", COND("절정", PLAYER) * 10
	CALL CALC, "기력회복", COND("절정", PLAYER) * 10
ENDIF
IF BASE:PLAYER:정력 <= 0 && BASE:PLAYER:스톡 > 0
	BASE:PLAYER:스톡 -= 1
	BASE:PLAYER:정력 = MAXBASE:PLAYER:정력
ENDIF
;CUPをPALAMに移す
FOR LCOUNT, 0, 17
	PALAM:LCOUNT = MIN(PALAM_LV(16), PALAM:LCOUNT+CUP:LCOUNT-CDOWN:LCOUNT)
NEXT

;체력기력정력が減りすぎていた時の処理
BASE:체력 = MAX(BASE:체력, 1)
BASE:기력 = MAX(BASE:기력, 0)
BASE:정력 = MAX(BASE:정력, 1)

BASE:PLAYER:체력 = MAX(BASE:PLAYER:체력, 1)
BASE:PLAYER:기력 = MAX(BASE:PLAYER:기력, 0)
BASE:PLAYER:정력 = MAX(BASE:PLAYER:정력, 1)

FLAG:8 = MEMO_FLAG8
TFLAG:33 = MEMO_TFLAG33
SELECTCOM = MEMO_SELECTCOM


;-------------------------------------------------
;キャラARGが主요정な커맨드を実行できるかを全部調べる
;-------------------------------------------------
@CHECK_COM_ABLE, ARG
#DIM LCOUNT
#DIM MEMO_TEQUIP30
#DIM MEMO_TARGET

MEMO_TARGET = TARGET

TARGET = ARG
MEMO_TEQUIP30 = TEQUIP:넘어뜨리기

;初期化
CSTR:실행가능명령 = /

FOR LCOUNT, 0, 200
	SELECTCASE LCOUNT
	;主요정커맨드の選別
	CASE 1, 3 TO 6, 9, 10, 13, 14, 60, 61, 65 TO 68, 70, 71, 75, 80 TO 83, 90 TO 99, 104, 105, 120, 121, 122, 125 TO 127, 140 TO 144, 150
		;커맨드実行済みでないと行わない
		SIF FIRSTCOM(LCOUNT) == 0
			CONTINUE

		SELECTCASE LCOUNT
		;条件が少々厳しい커맨드
		CASE 60, 61, 65 TO 67
			SIF COND("베테랑：Ｖ섹스") == 0
				CONTINUE
		CASE 70, 71, 75
			SIF COND("베테랑：Ａ섹스") == 0
				CONTINUE
		ENDSELECT

		TRYCALLFORM COM_ABLE{LCOUNT}
		SIF RESULT
			CSTR:실행가능명령 = %CSTR:실행가능명령%%TRAINNAME:LCOUNT%/

		SELECTCASE LCOUNT
		;넘어뜨리기状態も見る
		CASE 1, 4, 6, 9, 65, 75, 83, 90 TO 99, 120, 126, 150
			TEQUIP:넘어뜨리기 = 1
			TRYCALLFORM COM_ABLE{LCOUNT}
			SIF RESULT
				CSTR:실행가능명령 = %CSTR:실행가능명령%넘어뜨리기%TRAINNAME:LCOUNT%/
			TEQUIP:넘어뜨리기 = 0
		ENDSELECT

	ENDSELECT
NEXT

;PRINTFORMW %CSTR:실행가능명령%

TEQUIP:넘어뜨리기 = MEMO_TEQUIP30
TARGET = MEMO_TARGET


;-------------------------------------------------
;커맨드ARGSをキャラARGが実行できるかを参照し、実行가능なら１を返す。だめなら０
;-------------------------------------------------
@CANTRAIN(ARGS, ARG)
#FUNCTION

SIF ARG < 0
	RETURNF 0

LOCALS = /%ARGS%/

LOCAL = 0

SIF ARG == 0 && TARGET > 0
	ARG = TARGET

RETURNF STRCOUNT(CSTR:ARG:실행가능명령, LOCALS)


;-------------------------------------------------
;@CANTRAINの複数版
;커맨드ARGSをキャラARG:0～ARG:2が実行できるかを参照し、実行가능な人数を返す
;ARG:Xが0の時にTARGET:X > 0ならばTARGET:Xを代入する…ようはTARGET:0～TARGET:2について調べるときにはARGは0で良い
;-------------------------------------------------
@CANTRAINS(ARGS, ARG, ARG:1, ARG:2)
#FUNCTION
#DIM LCOUNT

SIF ARG < 0
	RETURNF 0

LOCALS = /%ARGS%/

LOCAL = 0

FOR LCOUNT, 0, 3
	SIF ARG:LCOUNT == 0 && TARGET:LCOUNT > 0
		ARG:LCOUNT = TARGET:LCOUNT

	SIF ARG:LCOUNT > 0
		LOCAL += STRCOUNT(CSTR:(ARG:LCOUNT):실행가능명령, LOCALS)
NEXT

RETURNF LOCAL
